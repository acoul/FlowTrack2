#!/usr/bin/env node

/*jslint node: true */
'use strict';

var cluster = require('cluster');
var netflow = require('node-netflowv9');
var es = require('elasticsearch');
var http = require('http');

var NetFlowStorage = require('../lib/NetFlowStorage');
var GetLogger = require('../lib/GetLogger');
var FlowTrack2App = require('../lib/FlowTrack2App');

var numCPUs = require('os').cpus().length;
var logger = new GetLogger(process.env.NODE_ENV);
var app = new FlowTrack2App(logger);

var port = 3000;

main();
function main() {

    var nfStore = new NetFlowStorage(es, logger);


    if (cluster.isMaster) {

        // Setup, then fork the flow collection workers
        nfStore.createIndex();

        for (var i = 0; i < numCPUs; i++) {
            cluster.fork();
        }


         // Now start the webservice
         startWebServer(port,app);


    } else {
        // Setup the worker
        netflow(function(flow) {

            logger.info('%s\t flows', flow.flows.length);
            for (var i = 0; i < flow.flows.length; i++) {
                nfStore.storeFlow(flow.flows[i]);
            }
        }).listen(2055);
    }
}



function startWebServer(port, app)
{

    http.createServer(app).listen(port);
    logger.info('Listening on: ' + port);
}